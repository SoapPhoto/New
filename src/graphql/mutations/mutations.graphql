#import "../fragments/fragments.graphql"

mutation AddCollection($data: AddCollectionInput!) {
  addCollection(data: $data) {
    ...CollectionFragment
  }
}

mutation UpdatePicture($data: UpdatePictureInput!, $id: Float!) {
  updatePicture(data: $data, id: $id) {
    ...UpdatePictureFragment
  }
}

mutation LikePicture($id: Float!) {
  likePicture(id: $id) {
    isLike
    likedCount
  }
}

mutation UnLikePicture($id: Float!) {
  unlikePicture(id: $id) {
    isLike
    likedCount
  }
}
mutation DeletePicture($id: Float!) {
  deletePicture(id: $id) {
    done
  }
}


mutation MarkNotificationReadAll {
  markNotificationReadAll {
    done
  }
}

mutation AddPictureCollection($id: Float!, $pictureId: Float!) {
  addPictureCollection(id: $id, pictureId: $pictureId) {
    ...CollectionFragment
  }
}

mutation RemovePictureCollection($id: Float!, $pictureId: Float!) {
  removePictureCollection(id: $id, pictureId: $pictureId) {
    done
  }
}

mutation DeleteCollection($id: Float!) {
  deleteCollection(id: $id) {
    done
  }
}

mutation UpdateProfile($data: UpdateProfileInput!) {
  updateProfile(data: $data) {
    ...UserFragment
  }
}

mutation UpdateCover($cover: String!) {
  updateCover(cover: $cover) {
    ...UserFragment
  }
}

mutation FollowUser($input: FollowUserInput!) {
  followUser(input: $input) {
    done
  }
}

mutation UnFollowUser($input: FollowUserInput!) {
  unFollowUser(input: $input) {
    done
  }
}

mutation AddComment($id: Float!, $commentId: Float, $data: AddCommentInput!) {
  addComment(id: $id, commentId: $commentId, data: $data) {
    ...CommentChildFragment
  }
}
